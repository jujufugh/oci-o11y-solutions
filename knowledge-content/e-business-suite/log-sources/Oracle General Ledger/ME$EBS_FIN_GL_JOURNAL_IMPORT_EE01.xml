<?xml version="1.0" encoding="UTF-8"?>
<LoganContent oms_version="2.50.2.0.0" name="content_ocid1.tenancy.oc1..aaaaaaaa5s2vdjjrydixjulorcwozffbpna37w5a35p3jhgpyshlkmio6oiq_1650039506307" content_version="2.50.2.0.0" xmlns="http://www.oracle.com/DataCenter/LogAnalyticsStd">
    <Field oms_version="2.50.2.0.0">
        <DisplayName>sensor</DisplayName>
        <FieldType>1</FieldType>
        <IsSystem>0</IsSystem>
        <IsPrimary>1</IsPrimary>
        <DataType>STRING</DataType>
        <IsMetricKeyEligible>0</IsMetricKeyEligible>
        <IsMetricValueEligible>0</IsMetricValueEligible>
        <FacetEligible>1</FacetEligible>
        <RangeFacetEligible>0</RangeFacetEligible>
        <TableEligible>1</TableEligible>
        <FacetPriority>1</FacetPriority>
        <Summarizable>1</Summarizable>
        <HighCardinality>1</HighCardinality>
        <LargeData>0</LargeData>
        <MultiValued>0</MultiValued>
        <SMAEnabledSetting>0</SMAEnabledSetting>
    </Field>
    
    <Tag>
<Name>#low_severity_sensor</Name>
<DisplayName>Low Severity Sensor</DisplayName>
<IsSystem>0</IsSystem>
<ProblemPriority>LOW</ProblemPriority>
</Tag>
    <Source name="EBS Sensor: FIN GL Journal Import Ends With Error EE01 - Monthly" oms_version="2.50.2.0.0" configWarningSettings="0">
    <SourceType>database_sql</SourceType>
    <TargetTypes>
        <TargetType>omc_oracle_db_instance</TargetType>
        <TargetType>omc_oracle_pdb</TargetType>
    </TargetTypes>
    <DisplayName>EBS Sensor: FIN GL Journal Import Ends With Error EE01 - Monthly</DisplayName>
    <Description><![CDATA[Journal Import Ends With Error EE01 An encumbrance type is required for encumbrance lines.]]></Description>
    <IsSystem>0</IsSystem>
    <IsSecureContent>1</IsSecureContent>
    <Patterns>
        <DBPattern dateTimeField="entrytime" dateTimeColumns="entrytime">
        <SQLQuery>
            <![CDATA[select 'ME$EBS_FIN_GL_JOURNAL_IMPORT_EE01' sensor, to_timestamp(to_char(sysdate, 'YYYY-MM-DD hh24:mi:ss'), 'YYYY-MM-DD hh24:mi:ss') entrytime, 'status:' || s.status || ', ledger_id:' || s.ledger_id || ', period_name:' || s.period_name || ', ccid_and_or_combination:' || s.ccid_and_or_combination || ', actual_flag:' || s.actual_flag || ', group_id:' || s.group_id key_data FROM (select  a.status status  , a.ledger_id ledger_id  , a.period_name period_name  , a.ccid_and_or_combination ccid_and_or_combination  , a.actual_flag actual_flag  , a.group_id group_id  from  (select  gi.status status  , decode(gi.ledger_id, -1, gi.set_of_books_id, gi.ledger_id) ledger_id  , gp.period_name period_name  , decode (gi.code_combination_id, NULL, gi.segment1||'.'||gi.segment2||'.'||gi.segment3||'.'||gi.segment4||'.'||gi.segment5||'.'||gi.segment6||'.'||gi.segment7||'.'||gi.segment8||'.'||gi.segment9||'.'||gi.segment10, gi.code_combination_id ||' ('|| gcc.concatenated_segments ||')') ccid_and_or_combination  , gi.actual_flag actual_flag  , gi.group_id group_id  from  apps.gl_interface gi,  apps.gl_ledgers gll,  apps.gl_code_combinations_kfv gcc,  apps.gl_periods GP  where decode(gi.ledger_id, -1, gi.set_of_books_id, gi.ledger_id) = gll.ledger_id  AND gp.period_set_name = gll.period_set_name  and gp.period_type = gll.accounted_period_type  /* AND gll.period_set_name = 'Accounting' */  and gi.accounting_date between gp.start_date and gp.end_date  and gi.code_combination_id = gcc.code_combination_id(+)  and gi.status like '%EE01%'  and rownum < 2) a) s]]>
        </SQLQuery>
        <IsInclude>1</IsInclude>
            <InUse>1</InUse>
            <DBQueryFieldList>
                <DBPatternSeqField>entrytime</DBPatternSeqField>
                <DBPatternField>
                    <DBQueryColName>sensor</DBQueryColName>
                    <FieldName>udfs1</FieldName>
                </DBPatternField>
                <DBPatternField>
                    <DBQueryColName>entrytime</DBQueryColName>
                    <FieldName>time</FieldName>
                </DBPatternField>
                <DBPatternField>
                                        <DBQueryColName>key_data</DBQueryColName>
                                        <FieldName>probkey</FieldName>
                                   </DBPatternField>
            </DBQueryFieldList>
            <IsSystem>0</IsSystem>
            <IsEnabled>1</IsEnabled>
            </DBPattern>
    </Patterns>
        <TagConditions>
            <TagCondition operator="CONTAINS_REGEX" field="udfs1" alertRuleVisible="0">
                <ConditionValues>
                    <ConditionValue>%</ConditionValue>
                </ConditionValues>
                <ConditionTags tagField="mtag">
                    <ConditionTag>#low_severity_sensor</ConditionTag>
                </ConditionTags>
                <IsSystem>0</IsSystem>
                <IsEnabled>1</IsEnabled>
            </TagCondition>
        </TagConditions>
        <IsHidden>0</IsHidden>
        <IsSMAEnabled>0</IsSMAEnabled>
    </Source>
    <FieldNameMaps>
        <FieldNameMap>
            <Name>udfs1</Name>
            <DisplayName>sensor</DisplayName>
        </FieldNameMap>
        
    </FieldNameMaps>
</LoganContent>