<?xml version="1.0" encoding="UTF-8"?>
<LoganContent oms_version="2.50.2.0.0" name="content_ocid1.tenancy.oc1..aaaaaaaa5s2vdjjrydixjulorcwozffbpna37w5a35p3jhgpyshlkmio6oiq_1650039506307" content_version="2.50.2.0.0" xmlns="http://www.oracle.com/DataCenter/LogAnalyticsStd">
    <Field oms_version="2.50.2.0.0">
        <DisplayName>sensor</DisplayName>
        <FieldType>1</FieldType>
        <IsSystem>0</IsSystem>
        <IsPrimary>1</IsPrimary>
        <DataType>STRING</DataType>
        <IsMetricKeyEligible>0</IsMetricKeyEligible>
        <IsMetricValueEligible>0</IsMetricValueEligible>
        <FacetEligible>1</FacetEligible>
        <RangeFacetEligible>0</RangeFacetEligible>
        <TableEligible>1</TableEligible>
        <FacetPriority>1</FacetPriority>
        <Summarizable>1</Summarizable>
        <HighCardinality>1</HighCardinality>
        <LargeData>0</LargeData>
        <MultiValued>0</MultiValued>
        <SMAEnabledSetting>0</SMAEnabledSetting>
    </Field>
    
    <Tag>
<Name>#medium_severity_sensor</Name>
<DisplayName>Medium Severity Sensor</DisplayName>
<IsSystem>0</IsSystem>
<ProblemPriority>MEDIUM</ProblemPriority>
</Tag>
    <Source name="EBS Sensor: FIN AP Invoice with issue in amounts or base amounts found - Weekly" oms_version="2.50.2.0.0" configWarningSettings="0">
    <SourceType>database_sql</SourceType>
    <TargetTypes>
        <TargetType>omc_oracle_db_instance</TargetType>
        <TargetType>omc_oracle_pdb</TargetType>
    </TargetTypes>
    <DisplayName>EBS Sensor: FIN AP Invoice with issue in amounts or base amounts found - Weekly</DisplayName>
    <Description><![CDATA[Users could create invoices where the amount and base_amount have different signs, incorrect base amounts or incorrect rounding amounts.]]></Description>
    <IsSystem>0</IsSystem>
    <IsSecureContent>1</IsSecureContent>
    <Patterns>
        <DBPattern dateTimeField="entrytime" dateTimeColumns="entrytime">
        <SQLQuery>
            <![CDATA[select 'ME$EBS_FIN_AP_AMOUNTS_BASEAMOUNTS_ISSUES' sensor, to_timestamp(to_char(sysdate, 'YYYY-MM-DD hh24:mi:ss'), 'YYYY-MM-DD hh24:mi:ss') entrytime, 'invoice_id:' || s.invoice_id key_data FROM (SELECT  invoice_id invoice_id  FROM  (  WITH invs AS (  SELECT /*+ materialize */ DISTINCT  invoice_id  FROM  apps.ap_invoice_distributions_all  WHERE  accounting_date BETWEEN ( trunc(sysdate) - 7 ) AND ( trunc(sysdate) + 3 )  )  /*SPLIT_HERE*/  SELECT /*+ ordered use_nl(ai) */  ai.invoice_id  FROM  invs,  apps.ap_invoices_all ai,  apps.ap_system_parameters_all asp  WHERE  ai.exchange_rate IS NOT NULL  AND ai.org_id = asp.org_id  AND apps.ap_utilities_pkg.ap_round_currency(invoice_amount * exchange_rate, base_currency_code) <> nvl(ai.base_amount, 0)  AND ai.invoice_currency_code <> asp.base_currency_code  AND ai.invoice_id = invs.invoice_id  AND ROWNUM < 11  UNION ALL  SELECT /*+ ordered us_nl(ai) */  ai.invoice_id  FROM  invs,  apps.ap_invoices_all ai,  apps.ap_system_parameters_all asp  WHERE  ai.exchange_rate IS NOT NULL  AND ai.org_id = asp.org_id  AND ai.invoice_currency_code <> asp.base_currency_code  AND apps.ap_invoices_utility_pkg.get_approval_status(ai.invoice_id, ai.invoice_amount, ai.payment_status_flag, ai.invoice_type_lookup_code) <>  'NEVER APPROVED'  AND ai.invoice_type_lookup_code <> 'PO PRICE ADJUST'  AND NOT EXISTS (  SELECT /*+ no_unnest */  'Adjustment corrections exists'  FROM  apps.ap_invoice_distributions_all aid  WHERE  aid.invoice_id = ai.invoice_id  AND aid.dist_match_type = 'ADJUSTMENT_CORRECTION'  )  AND ai.invoice_amount = (  SELECT  SUM(ail.amount) + decode(nvl(ai.net_of_retainage_flag, 'N'), 'Y', SUM(nvl(retained_amount, 0)), 0)  FROM  apps.ap_invoice_lines_all ail  WHERE  ail.invoice_id = ai.invoice_id  AND ail.line_type_lookup_code <> 'AWT'  AND ( ( ail.prepay_invoice_id IS NOT NULL  AND nvl(ail.invoice_includes_prepay_flag, 'N') = 'Y' )  OR ail.prepay_invoice_id IS NULL )  )  AND nvl(ai.base_amount, 0) <> (  SELECT  SUM(nvl(base_amount, 0)) + decode(nvl(ai.net_of_retainage_flag, 'N'), 'Y', apps.ap_utilities_pkg.ap_round_currency(SUM(  nvl(retained_amount, 0)) * ai.exchange_rate, asp.base_currency_code), 0)  FROM  apps.ap_invoice_lines_all ail  WHERE  ail.invoice_id = ai.invoice_id  AND ail.line_type_lookup_code <> 'AWT'  AND ( ( ail.prepay_invoice_id IS NOT NULL  AND nvl(ail.invoice_includes_prepay_flag, 'N') = 'Y' )  OR ail.prepay_invoice_id IS NULL )  )  AND ai.invoice_id = invs.invoice_id  AND ROWNUM < 11  UNION ALL  SELECT /*+ ordered use_nl(ai, ail) */  ai.invoice_id  FROM  invs,  apps.ap_invoices_all ai,  apps.ap_invoice_lines_all ail,  apps.ap_system_parameters_all asp  WHERE  ai.exchange_rate IS NOT NULL  AND ai.invoice_id = ail.invoice_id  AND ai.org_id = asp.org_id  AND ai.invoice_currency_code <> asp.base_currency_code  AND ail.base_amount IS NOT NULL  AND ai.invoice_type_lookup_code <> 'PO PRICE ADJUST'  AND NOT EXISTS (  SELECT /*+ no_unnest */  'unvalidated dists exists'  FROM  apps.ap_invoice_distributions_all aid1  WHERE  aid1.invoice_id = ai.invoice_id  AND ( aid1.dist_match_type = 'ADJUSTMENT_CORRECTION'  OR nvl(aid1.match_status_flag, 'N') = 'N' )  )  AND ail.amount = (  SELECT /*+ no_unnest */  SUM(aid2.amount)  FROM  apps.ap_invoice_distributions_all aid2  WHERE  aid2.invoice_id = ail.invoice_id  AND aid2.invoice_line_number = ail.line_number  )  AND ( ail.line_type_lookup_code IN ( 'ITEM', 'FREIGHT', 'MISCELLANEOUS' )  OR ai.cancelled_date IS NOT NULL )  AND ail.base_amount <> (  SELECT /*+ no_unnest */  SUM(nvl(aid.base_amount, 0))  FROM  apps.ap_invoice_distributions_all aid  WHERE  aid.invoice_id = ail.invoice_id  AND aid.invoice_line_number = ail.line_number  )  AND ai.invoice_id = invs.invoice_id  AND ROWNUM < 11  UNION ALL  SELECT /*+ ordered use_nl(ai) */  ai.invoice_id  FROM  invs,  apps.ap_invoices_all ai,  apps.ap_system_parameters_all asp  WHERE  ai.exchange_rate IS NOT NULL  AND ai.org_id = asp.org_id  AND ai.invoice_currency_code <> asp.base_currency_code  AND ai.invoice_type_lookup_code <> 'PO PRICE ADJUST'  AND NOT EXISTS (  SELECT /*+ no_unnest */  'Adjustment corrections exists'  FROM  apps.ap_invoice_distributions_all aid1  WHERE  aid1.invoice_id = ai.invoice_id  AND aid1.dist_match_type = 'ADJUSTMENT_CORRECTION'  )  AND EXISTS (  SELECT /*+ no_unnest */  'opposite signs'  FROM  apps.ap_invoice_distributions_all aid  WHERE  aid.invoice_id = ai.invoice_id  AND aid.base_amount IS NOT NULL  AND ( ( aid.amount > 0  AND aid.base_amount < 0 )  OR ( aid.amount < 0  AND aid.base_amount > 0 ) )  AND aid.line_type_lookup_code NOT IN ( 'REC_TAX', 'NONREC_TAX', 'TRV', 'TIPV', 'TERV' )  )  AND ai.invoice_id = invs.invoice_id  AND ROWNUM < 11  UNION ALL  SELECT /*+ ordered use_nl(ai) */  ai.invoice_id  FROM  invs,  apps.ap_invoices_all ai,  apps.ap_system_parameters_all asp  WHERE  nvl(ai.historical_flag, 'N') <> 'Y'  AND ai.exchange_rate IS NOT NULL  AND ai.cancelled_date IS NULL  AND ai.org_id = asp.org_id  AND ai.invoice_currency_code <> asp.base_currency_code  AND ai.invoice_type_lookup_code <> 'PO PRICE ADJUST'  AND NOT EXISTS (  SELECT /*+ no_unnest */  'Adjustment corrections exists'  FROM  apps.ap_invoice_distributions_all aid1  WHERE  aid1.invoice_id = ai.invoice_id  AND aid1.dist_match_type = 'ADJUSTMENT_CORRECTION'  )  AND EXISTS (  SELECT /*+ no_unnest */  'wrong variance'  FROM  apps.ap_invoice_distributions_all aid  WHERE  aid.invoice_id = ai.invoice_id  AND ( aid.po_distribution_id IS NOT NULL  OR aid.rcv_transaction_id IS NOT NULL )  AND nvl(aid.dist_match_type, 'NOT_MATCHED') IN ( 'ITEM_TO_PO', 'ITEM_TO_RECEIPT', 'ITEM_TO_SERVICE_PO', 'ITEM_TO_SERVICE_RECEIPT',  'QTY_CORRECTION', 'AMOUNT_CORRECTION' )  AND nvl(aid.reversal_flag, 'N') <> 'Y'  AND aid.line_type_lookup_code IN ( 'ITEM', 'ACCRUAL' )  AND abs(aid.base_amount -(  SELECT /*+ no_unnest */  apps.ap_utilities_pkg.ap_round_currency(aid1.amount * nvl(rt.currency_conversion_rate, pod.rate), asp.base_currency_code)  FROM  apps.ap_invoice_distributions_all aid1, apps.po_distributions_all pod, apps.rcv_transactions rt, apps.ap_system_parameters_all asp  WHERE  aid1.invoice_distribution_id = aid.invoice_distribution_id  AND aid1.po_distribution_id = pod.po_distribution_id  AND aid1.rcv_transaction_id = rt.transaction_id(+)  AND aid1.org_id = asp.org_id  )) >.99  )  AND ai.invoice_id = invs.invoice_id  AND ROWNUM < 11  UNION ALL  SELECT /*+ ordered use_nl(ai) */  ai.invoice_id  FROM  invs,  apps.ap_invoices_all ai,  apps.ap_system_parameters_all asp,  apps.ap_invoice_distributions_all aid  WHERE  ai.exchange_rate IS NOT NULL  AND ai.org_id = asp.org_id  AND ai.invoice_currency_code <> asp.base_currency_code  AND ai.invoice_id = aid.invoice_id  AND ai.org_id = asp.org_id  AND ai.invoice_currency_code <> asp.base_currency_code  AND ai.invoice_type_lookup_code <> 'PO PRICE ADJUST'  AND NOT EXISTS (  SELECT  'unvalidated dists exists'  FROM  apps.ap_invoice_distributions_all aid1  WHERE  aid1.invoice_id = ai.invoice_id  AND ( aid1.dist_match_type = 'ADJUSTMENT_CORRECTION'  OR nvl(aid1.match_status_flag, 'N') = 'N' )  )  AND aid.line_type_lookup_code IN ( 'ITEM', 'FREIGHT', 'MISCELLANEOUS' )  AND aid.po_distribution_id IS NULL  AND ( aid.base_amount IS NULL  OR ( ( aid.base_amount - aid.rounding_amt ) <> (  SELECT  apps.ap_utilities_pkg.ap_round_currency(aid.amount * ai.exchange_rate, asp.base_currency_code)  FROM  sys.dual  ) ) )  AND ai.invoice_id = invs.invoice_id  AND ROWNUM < 11  /*SPLIT_HERE*/  )  ORDER BY  invoice_id) s]]>
        </SQLQuery>
        <IsInclude>1</IsInclude>
            <InUse>1</InUse>
            <DBQueryFieldList>
                <DBPatternSeqField>entrytime</DBPatternSeqField>
                <DBPatternField>
                    <DBQueryColName>sensor</DBQueryColName>
                    <FieldName>udfs1</FieldName>
                </DBPatternField>
                <DBPatternField>
                    <DBQueryColName>entrytime</DBQueryColName>
                    <FieldName>time</FieldName>
                </DBPatternField>
                <DBPatternField>
                                        <DBQueryColName>key_data</DBQueryColName>
                                        <FieldName>probkey</FieldName>
                                   </DBPatternField>
            </DBQueryFieldList>
            <IsSystem>0</IsSystem>
            <IsEnabled>1</IsEnabled>
            </DBPattern>
    </Patterns>
        <TagConditions>
            <TagCondition operator="CONTAINS_REGEX" field="udfs1" alertRuleVisible="0">
                <ConditionValues>
                    <ConditionValue>%</ConditionValue>
                </ConditionValues>
                <ConditionTags tagField="mtag">
                    <ConditionTag>#medium_severity_sensor</ConditionTag>
                </ConditionTags>
                <IsSystem>0</IsSystem>
                <IsEnabled>1</IsEnabled>
            </TagCondition>
        </TagConditions>
        <IsHidden>0</IsHidden>
        <IsSMAEnabled>0</IsSMAEnabled>
    </Source>
    <FieldNameMaps>
        <FieldNameMap>
            <Name>udfs1</Name>
            <DisplayName>sensor</DisplayName>
        </FieldNameMap>
        
    </FieldNameMaps>
</LoganContent>