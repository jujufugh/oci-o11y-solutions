<?xml version="1.0" encoding="UTF-8"?>
<LoganContent oms_version="2.50.2.0.0" name="content_ocid1.tenancy.oc1..aaaaaaaa5s2vdjjrydixjulorcwozffbpna37w5a35p3jhgpyshlkmio6oiq_1650039506307" content_version="2.50.2.0.0" xmlns="http://www.oracle.com/DataCenter/LogAnalyticsStd">
    <Field oms_version="2.50.2.0.0">
        <DisplayName>sensor</DisplayName>
        <FieldType>1</FieldType>
        <IsSystem>0</IsSystem>
        <IsPrimary>1</IsPrimary>
        <DataType>STRING</DataType>
        <IsMetricKeyEligible>0</IsMetricKeyEligible>
        <IsMetricValueEligible>0</IsMetricValueEligible>
        <FacetEligible>1</FacetEligible>
        <RangeFacetEligible>0</RangeFacetEligible>
        <TableEligible>1</TableEligible>
        <FacetPriority>1</FacetPriority>
        <Summarizable>1</Summarizable>
        <HighCardinality>1</HighCardinality>
        <LargeData>0</LargeData>
        <MultiValued>0</MultiValued>
        <SMAEnabledSetting>0</SMAEnabledSetting>
    </Field>
    
    <Tag>
<Name>#medium_severity_sensor</Name>
<DisplayName>Medium Severity Sensor</DisplayName>
<IsSystem>0</IsSystem>
<ProblemPriority>MEDIUM</ProblemPriority>
</Tag>
    <Source name="EBS Sensor: FIN AP AWT Distributions Missing OR Incorrect AWT RELATED ID - Weekly" oms_version="2.50.2.0.0" configWarningSettings="0">
    <SourceType>database_sql</SourceType>
    <TargetTypes>
        <TargetType>omc_oracle_db_instance</TargetType>
        <TargetType>omc_oracle_pdb</TargetType>
    </TargetTypes>
    <DisplayName>EBS Sensor: FIN AP AWT Distributions Missing OR Incorrect AWT RELATED ID - Weekly</DisplayName>
    <Description><![CDATA[AWT_RELATED_ID is NULL due to multiple different scenarios.]]></Description>
    <IsSystem>0</IsSystem>
    <IsSecureContent>1</IsSecureContent>
    <Patterns>
        <DBPattern dateTimeField="entrytime" dateTimeColumns="entrytime">
        <SQLQuery>
            <![CDATA[select 'ME$EBS_FIN_AP_AWTDISTRIBUTIONS_MISSING_AWTRELATEDID' sensor, to_timestamp(to_char(sysdate, 'YYYY-MM-DD hh24:mi:ss'), 'YYYY-MM-DD hh24:mi:ss') entrytime, 'invoice_id:' || s.invoice_id key_data FROM (SELECT      invoice_id invoice_id  FROM      (          WITH invs AS (              SELECT /*+ materialize */ DISTINCT                  invoice_id              FROM                  apps.ap_invoice_distributions_all              WHERE                  accounting_date BETWEEN ( trunc(sysdate) - 7 ) AND ( trunc(sysdate) + 3 )          ), zero_amt_awt_no_nonrev_itm AS (              SELECT /*+ leading(invs) use_nl(aid) */                  aid.invoice_id,                  aid.invoice_line_number,                  aid.invoice_distribution_id,                  aid.amount,                  SUM(aid.amount)                  OVER(PARTITION BY aid.invoice_id, aid.invoice_line_number) line_wise_sum,                  SUM(aid.amount)                  OVER(PARTITION BY aid.invoice_id)                          inv_wise_sum              FROM                  invs,                  apps.ap_invoice_distributions_all aid              WHERE                      aid.invoice_id = invs.invoice_id                  AND aid.line_type_lookup_code = 'AWT'                  AND aid.awt_related_id IS NULL                  AND aid.historical_flag = 'Y'                  AND nvl(aid.reversal_flag, 'N') = 'N'                  AND NOT EXISTS (                      SELECT                          1                      FROM                          apps.ap_invoice_distributions_all aidx                      WHERE                              aidx.invoice_id = aid.invoice_id                          AND aidx.line_type_lookup_code NOT IN ( 'AWT', 'ERV', 'TERV' )                          AND aidx.prepay_distribution_id IS NULL                          AND nvl(aidx.reversal_flag, 'N') = 'N'                          AND sign(aidx.amount) <> sign(aid.amount)                          AND abs(aidx.amount) >= abs(aid.amount)                  )          ), invs2 AS (              SELECT                  invoice_id              FROM                  invs              WHERE                  EXISTS (                      SELECT                          1                      FROM                          apps.ap_invoice_distributions_all aid_sub                      WHERE                              aid_sub.invoice_id = invs.invoice_id                          AND nvl(aid_sub.historical_flag, 'N') = 'N'                      UNION ALL                      SELECT                          1                      FROM                          apps.ap_invoice_distributions_all aid_sub,                          apps.xla_events                   xe_sub,                          apps.ap_accounting_events_all     aae_sub                      WHERE                              aid_sub.accounting_event_id = xe_sub.event_id                          AND xe_sub.event_id = aae_sub.accounting_event_id                          AND xe_sub.upg_batch_id = - 9999                          AND aid_sub.invoice_id = invs.invoice_id                      UNION ALL                      SELECT                          1                      FROM                          apps.ap_invoice_payments_all  aip_sub,                          apps.ap_payment_history_all   aph_sub,                          apps.xla_events               xe_sub,                          apps.ap_accounting_events_all aae_sub                      WHERE                              aip_sub.invoice_id = invs.invoice_id                          AND aip_sub.check_id = aph_sub.check_id                          AND aph_sub.accounting_event_id = xe_sub.event_id                          AND xe_sub.application_id = 200                          AND xe_sub.event_id = aae_sub.accounting_event_id                          AND xe_sub.upg_batch_id = - 9999                      UNION ALL                      SELECT                          1                      FROM                          apps.ap_invoice_distributions_all aid_sub,                          apps.xla_events                   xe_sub,                          apps.xla_ae_headers               xah_sub                      WHERE                              aid_sub.invoice_id = invs.invoice_id                          AND aid_sub.accounting_event_id = xe_sub.event_id                          AND xe_sub.application_id = 200                          AND xe_sub.event_id = xah_sub.event_id                          AND xah_sub.application_id = 200                          AND xah_sub.upg_batch_id IS NULL                      UNION ALL                      SELECT                          1                      FROM                          apps.ap_invoice_payments_all aip_sub,                          apps.ap_payment_history_all  aph_sub,                          apps.xla_events              xe_sub,                          apps.xla_ae_headers          xah_sub                      WHERE                              aip_sub.invoice_id = invs.invoice_id                          AND aip_sub.check_id = aph_sub.check_id                          AND aph_sub.accounting_event_id = xe_sub.event_id                          AND xe_sub.application_id = 200                          AND xe_sub.event_id = xah_sub.event_id                          AND xah_sub.application_id = 200                          AND xah_sub.upg_batch_id IS NULL                  )          )          SELECT /*+ ordered use_nl(aid) */              aid.invoice_id          FROM              invs,              apps.ap_invoice_distributions_all aid          WHERE                  aid.line_type_lookup_code = 'AWT'              AND nvl(aid.historical_flag, 'N') = 'N'              AND aid.awt_related_id IS NULL              AND aid.invoice_id = invs.invoice_id          UNION ALL          SELECT /*+ ordered use_nl(ai, aid) */              aid.invoice_id          FROM              invs2,              apps.ap_invoices_all              ai,              apps.ap_invoice_distributions_all aid          WHERE                  aid.line_type_lookup_code = 'AWT'              AND aid.historical_flag = 'Y'              AND aid.awt_related_id IS NULL              AND ai.invoice_id = aid.invoice_id              AND ai.payment_status_flag IN ( 'N', 'P' )              AND ai.historical_flag = 'Y'              AND ai.invoice_id = invs2.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(ai, aid) */              aid.invoice_id          FROM              invs2,              apps.ap_invoices_all              ai,              apps.ap_invoice_distributions_all aid          WHERE                  ai.invoice_id = invs2.invoice_id              AND aid.line_type_lookup_code = 'AWT'              AND aid.historical_flag = 'Y'              AND aid.awt_related_id IS NULL              AND ai.invoice_id = aid.invoice_id              AND ai.payment_status_flag = 'Y'              AND ai.historical_flag = 'Y'              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(aid) */              aid.invoice_id          FROM              invs,              apps.ap_invoice_distributions_all aid          WHERE                  aid.line_type_lookup_code = 'AWT'              AND nvl(aid.historical_flag, 'N') = 'N'              AND aid.awt_related_id IS NOT NULL              AND NOT EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_invoice_distributions_all aid_parent                  WHERE                          aid_parent.invoice_id = aid.invoice_id                      AND aid.awt_related_id = aid_parent.invoice_distribution_id              )              AND aid.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(aid, aid_erv) */              aid.invoice_id          FROM              invs,              apps.ap_invoice_distributions_all aid,              apps.ap_invoice_distributions_all aid_erv          WHERE                  aid.invoice_id = aid_erv.invoice_id              AND aid.awt_related_id = aid_erv.invoice_distribution_id              AND aid.line_type_lookup_code = 'AWT'              AND aid.awt_flag = 'A'              AND nvl(aid.historical_flag, 'N') = 'N'              AND aid_erv.line_type_lookup_code IN ( 'TERV', 'ERV' )              AND aid.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(ai, aid_awt, aid_item, xe_item) */              aid_awt.invoice_id          FROM              invs,              apps.ap_invoices_all              ai,              apps.ap_invoice_distributions_all aid_awt,              apps.ap_invoice_distributions_all aid_item,              apps.xla_events                   xe_item,              apps.ap_system_parameters_all     param          WHERE                  aid_awt.line_type_lookup_code = 'AWT'              AND aid_item.invoice_distribution_id = aid_awt.awt_related_id              AND ai.invoice_id = aid_awt.invoice_id              AND ai.invoice_id = aid_item.invoice_id              AND xe_item.event_id = aid_item.accounting_event_id              AND xe_item.application_id = 200              AND ( nvl(ai.payment_status_flag, 'N') <> 'Y'                    OR EXISTS (                  SELECT /*+ no_unnest ordered use_nl(aip, aph, xe) */                      1                  FROM                      apps.ap_invoice_payments_all aip,                      apps.ap_payment_history_all  aph,                      apps.xla_events              xe                  WHERE                          aip.invoice_id = ai.invoice_id                      AND aip.check_id = aph.check_id                      AND xe.event_id = aph.accounting_event_id                      AND xe.application_id = 200                      AND ( aph.posted_flag = 'N'                            OR ( aph.posted_flag = 'Y'                                 AND EXISTS (                          SELECT                              1                          FROM                              apps.xla_ae_headers xh                          WHERE                                  xh.event_id = xe.event_id                              AND xh.application_id = 200                              AND nvl(xh.upg_batch_id, - 9999) = - 9999                      ) ) )              ) )              AND xe_item.event_type_code LIKE '%ADJUSTED'              AND ai.historical_flag = 'Y'              AND param.org_id = ai.org_id              AND aid_awt.parent_reversal_id IS NULL              AND param.automatic_offsets_flag = 'N'              AND EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_invoice_distributions_all aidx                  WHERE                          aidx.accounting_event_id = xe_item.event_id                      AND aidx.invoice_id = aid_item.invoice_id                  HAVING                      SUM(aidx.amount) = 0              )              AND ai.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(ai) */              aid.invoice_id          FROM              invs,              apps.ap_invoices_all              ai,              apps.ap_invoice_distributions_all aid          WHERE                  ai.invoice_id = invs.invoice_id              AND aid.invoice_id = ai.invoice_id              AND aid.line_type_lookup_code = 'AWT'              AND aid.awt_related_id IS NULL              AND ai.cancelled_date IS NULL              AND ( aid.awt_flag = 'M'                    OR ( aid.awt_flag = 'A'                         AND aid.historical_flag = 'Y' ) )              AND NOT EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_invoice_distributions_all aidx                  WHERE                          aidx.invoice_id = aid.invoice_id                      AND aidx.line_type_lookup_code NOT IN ( 'AWT', 'ERV', 'TERV' )                      AND aidx.prepay_distribution_id IS NULL                      AND abs(aidx.amount) >= abs(aid.amount)              )              AND ( nvl(ai.payment_status_flag, 'N') <> 'Y'                    OR EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_invoice_payments_all aip,                      apps.ap_payment_history_all  aph,                      apps.xla_events              xe                  WHERE                          aip.invoice_id = ai.invoice_id                      AND aip.check_id = aph.check_id                      AND xe.event_id = aph.accounting_event_id                      AND xe.application_id = 200                      AND ( aph.posted_flag = 'N'                            OR ( aph.posted_flag = 'Y'                                 AND EXISTS (                          SELECT                              1                          FROM                              apps.xla_ae_headers xh                          WHERE                                  xh.event_id = xe.event_id                              AND xh.application_id = 200                              AND nvl(xh.upg_batch_id, - 9999) = - 9999                      ) ) )              ) )              AND ROWNUM < 11          UNION          SELECT              aid.invoice_id          FROM              apps.ap_invoice_distributions_all aid          WHERE              aid.invoice_distribution_id IN (                  SELECT                      invoice_distribution_id                  FROM                      zero_amt_awt_no_nonrev_itm                  WHERE                      ( line_wise_sum = 0                        OR inv_wise_sum = 0 )              )              AND ROWNUM < 11      )  ORDER BY      invoice_id) s]]>
        </SQLQuery>
        <IsInclude>1</IsInclude>
            <InUse>1</InUse>
            <DBQueryFieldList>
                <DBPatternSeqField>entrytime</DBPatternSeqField>
                <DBPatternField>
                    <DBQueryColName>sensor</DBQueryColName>
                    <FieldName>udfs1</FieldName>
                </DBPatternField>
                <DBPatternField>
                    <DBQueryColName>entrytime</DBQueryColName>
                    <FieldName>time</FieldName>
                </DBPatternField>
                <DBPatternField>
                                        <DBQueryColName>key_data</DBQueryColName>
                                        <FieldName>probkey</FieldName>
                                   </DBPatternField>
            </DBQueryFieldList>
            <IsSystem>0</IsSystem>
            <IsEnabled>1</IsEnabled>
            </DBPattern>
    </Patterns>
        <TagConditions>
            <TagCondition operator="CONTAINS_REGEX" field="udfs1" alertRuleVisible="0">
                <ConditionValues>
                    <ConditionValue>%</ConditionValue>
                </ConditionValues>
                <ConditionTags tagField="mtag">
                    <ConditionTag>#medium_severity_sensor</ConditionTag>
                </ConditionTags>
                <IsSystem>0</IsSystem>
                <IsEnabled>1</IsEnabled>
            </TagCondition>
        </TagConditions>
        <IsHidden>0</IsHidden>
        <IsSMAEnabled>0</IsSMAEnabled>
    </Source>
    <FieldNameMaps>
        <FieldNameMap>
            <Name>udfs1</Name>
            <DisplayName>sensor</DisplayName>
        </FieldNameMap>
        
    </FieldNameMaps>
</LoganContent>