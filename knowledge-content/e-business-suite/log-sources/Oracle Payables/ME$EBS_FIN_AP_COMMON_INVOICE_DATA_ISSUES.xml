<?xml version="1.0" encoding="UTF-8"?>
<LoganContent oms_version="2.50.2.0.0" name="content_ocid1.tenancy.oc1..aaaaaaaa5s2vdjjrydixjulorcwozffbpna37w5a35p3jhgpyshlkmio6oiq_1650039506307" content_version="2.50.2.0.0" xmlns="http://www.oracle.com/DataCenter/LogAnalyticsStd">
    <Field oms_version="2.50.2.0.0">
        <DisplayName>sensor</DisplayName>
        <FieldType>1</FieldType>
        <IsSystem>0</IsSystem>
        <IsPrimary>1</IsPrimary>
        <DataType>STRING</DataType>
        <IsMetricKeyEligible>0</IsMetricKeyEligible>
        <IsMetricValueEligible>0</IsMetricValueEligible>
        <FacetEligible>1</FacetEligible>
        <RangeFacetEligible>0</RangeFacetEligible>
        <TableEligible>1</TableEligible>
        <FacetPriority>1</FacetPriority>
        <Summarizable>1</Summarizable>
        <HighCardinality>1</HighCardinality>
        <LargeData>0</LargeData>
        <MultiValued>0</MultiValued>
        <SMAEnabledSetting>0</SMAEnabledSetting>
    </Field>
    
    <Tag>
<Name>#medium_severity_sensor</Name>
<DisplayName>Medium Severity Sensor</DisplayName>
<IsSystem>0</IsSystem>
<ProblemPriority>MEDIUM</ProblemPriority>
</Tag>
    <Source name="EBS Sensor: FIN AP Invoice data integrity issues exist - Weekly" oms_version="2.50.2.0.0" configWarningSettings="0">
    <SourceType>database_sql</SourceType>
    <TargetTypes>
        <TargetType>omc_oracle_db_instance</TargetType>
        <TargetType>omc_oracle_pdb</TargetType>
    </TargetTypes>
    <DisplayName>EBS Sensor: FIN AP Invoice data integrity issues exist - Weekly</DisplayName>
    <Description><![CDATA[There are known bugs that can cause various invoice issues e.g. validation, cancellation, tax issues.  One or more of these issues have been detected.]]></Description>
    <IsSystem>0</IsSystem>
    <IsSecureContent>1</IsSecureContent>
    <Patterns>
        <DBPattern dateTimeField="entrytime" dateTimeColumns="entrytime">
        <SQLQuery>
            <![CDATA[select 'ME$EBS_FIN_AP_COMMON_INVOICE_DATA_ISSUES' sensor, to_timestamp(to_char(sysdate, 'YYYY-MM-DD hh24:mi:ss'), 'YYYY-MM-DD hh24:mi:ss') entrytime, 'invoice_id:' || s.invoice_id key_data FROM (SELECT      invoice_id invoice_id  FROM      (          WITH invs AS (              SELECT /*+ materialize */ DISTINCT                  invoice_id              FROM                  apps.ap_invoice_distributions_all              WHERE                  accounting_date BETWEEN ( trunc(sysdate) - 7 ) AND ( trunc(sysdate) + 3 )          )  /*SPLIT_HERE*/          SELECT /*+ ordered use_nl(ai, aid) */              aid.invoice_id          FROM              invs,              apps.ap_invoices_all              ai,              apps.ap_invoice_distributions_all aid,              apps.financials_system_params_all fsp          WHERE                  ai.invoice_id = invs.invoice_id              AND aid.invoice_id = ai.invoice_id              AND aid.posted_flag = 'Y'              AND ai.org_id = fsp.org_id              AND ( ( nvl(fsp.purch_encumbrance_flag, 'N') = 'N'                      AND aid.match_status_flag NOT IN ( 'T', 'A' ) )                    OR ( nvl(fsp.purch_encumbrance_flag, 'N') = 'Y'                         AND aid.match_status_flag <> 'A' ) )              AND EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.xla_events x                  WHERE                          x.application_id = 200                      AND x.event_id = aid.accounting_event_id                      AND x.event_status_code IN ( 'N', 'P' )                      AND x.process_status_code = 'P'              )              AND ROWNUM < 11          UNION ALL          SELECT /*+ordered use_nl(asa) */              asa.invoice_id          FROM              invs,              apps.ap_self_assessed_tax_dist_all asa          WHERE                  asa.invoice_id = invs.invoice_id              AND asa.posted_flag = 'Y'              AND nvl(asa.match_status_flag, 'N') <> 'A'              AND EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.xla_events x                  WHERE                          x.application_id = 200                      AND x.event_id = asa.accounting_event_id                      AND x.event_status_code IN ( 'N', 'P' )                      AND x.process_status_code = 'P'              )              AND ROWNUM < 2          UNION ALL          SELECT /*+ ordered use_nl(aid) */              aid.invoice_id          FROM              invs,              apps.ap_invoice_distributions_all aid          WHERE              line_type_lookup_code IN ( 'REC_TAX', 'NONREC_TAX', 'TRV', 'TERV', 'TIPV' )              AND detail_tax_dist_id IS NULL              AND summary_tax_line_id IS NULL              AND nvl(aid.historical_flag, 'N') = 'N'              AND aid.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(asad) */              asad.invoice_id          FROM              invs,              apps.ap_self_assessed_tax_dist_all asad          WHERE              EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.zx_rec_nrec_dist zd                  WHERE                          zd.trx_id = asad.invoice_id                      AND zd.rec_nrec_tax_dist_id = asad.detail_tax_dist_id                      AND zd.entity_code = 'AP_INVOICES'                      AND zd.event_class_code IN ( 'STANDARD INVOICES', 'PREPAYMENT INVOICES', 'EXPENSE REPORTS' )                      AND zd.application_id = 200                      AND zd.self_assessed_flag = 'N'              )              AND asad.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(aid) */              aid.invoice_id          FROM              invs,              apps.ap_invoice_distributions_all aid          WHERE              aid.detail_tax_dist_id IS NOT NULL              AND nvl(aid.historical_flag, 'N') = 'N'              AND EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.zx_rec_nrec_dist zd                  WHERE                          zd.trx_id = aid.invoice_id                      AND zd.rec_nrec_tax_dist_id = aid.detail_tax_dist_id                      AND zd.entity_code = 'AP_INVOICES'                      AND zd.event_class_code IN ( 'STANDARD INVOICES', 'PREPAYMENT INVOICES', 'EXPENSE REPORTS' )                      AND zd.application_id = 200                      AND zd.self_assessed_flag = 'Y'              )              AND aid.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(ai, asad) */              ai.invoice_id          FROM              invs,              apps.ap_invoices_all               ai,              apps.ap_self_assessed_tax_dist_all asad          WHERE                  ai.invoice_id = asad.invoice_id              AND asad.accounting_event_id IS NULL              AND asad.bc_event_id IS NULL              AND ai.cancelled_date IS NULL              AND nvl(ai.force_revalidation_flag, 'N') <> 'Y'              AND apps.ap_invoices_pkg.get_approval_status(ai.invoice_id, ai.invoice_amount, ai.payment_status_flag, ai.invoice_type_lookup_code)              IN ( 'APPROVED', 'AVAILABLE',                                                                                                                                           'UNPAID',                                                                                                                                           'FULL' )              AND ai.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(aha) */              aha.invoice_id          FROM              invs,              apps.ap_holds_all aha          WHERE                  hold_lookup_code = 'CANNOT EXECUTE ALLOCATION'              AND release_lookup_code IS NULL              AND NOT EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_invoice_lines_all ail                  WHERE                          ail.invoice_id = aha.invoice_id                      AND line_type_lookup_code IN ( 'FREIGHT', 'MISCELLANEOUS' )                      AND nvl(discarded_flag, 'N') = 'N'                      AND nvl(generate_dists, 'N') = 'Y'              )              AND aha.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(ai) */              ai.invoice_id          FROM              invs,              apps.ap_invoices_all ai          WHERE                  nvl(ai.historical_flag, 'N') = 'N'              AND ai.cancelled_date IS NOT NULL              AND nvl(ai.amount_paid, 0) <> 0              AND ai.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(ai) */              ai.invoice_id          FROM              invs,              apps.ap_invoices_all ai          WHERE              ai.cancelled_date IS NOT NULL              AND ai.invoice_amount = 0              AND nvl(ai.historical_flag, 'N') = 'N'              AND EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_payment_schedules_all aps                  WHERE                          aps.invoice_id = ai.invoice_id                      AND aps.hold_flag = 'Y'              )              AND ai.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(ai, aidrev) */              ai.invoice_id          FROM              invs,              apps.ap_invoices_all              ai,              apps.ap_invoice_distributions_all aidrev          WHERE                  ai.invoice_id = aidrev.invoice_id              AND nvl(ai.historical_flag, 'N') = 'N'              AND aidrev.parent_reversal_id IS NOT NULL              AND aidrev.reversal_flag = 'Y'              AND EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_invoice_distributions_all aidori                  WHERE                          aidori.invoice_id = aidrev.invoice_id                      AND aidori.invoice_line_number = aidrev.invoice_line_number                      AND aidori.invoice_distribution_id = aidrev.parent_reversal_id                      AND abs(nvl(aidori.amount, 0)) <> abs(nvl(aidrev.amount, 0))              )              AND ai.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT  /*+ ordered use_nl(aid) */              aid.invoice_id          FROM              invs,              apps.ap_invoice_distributions_all aid          WHERE                  match_status_flag = 'S'              AND nvl(aid.historical_flag, 'N') = 'N'              AND EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_invoices_all ai                  WHERE                          ai.invoice_id = aid.invoice_id                      AND ai.validation_request_id IS NULL              )              AND aid.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(ai, aid) */              ai.invoice_id          FROM              invs,              apps.ap_invoices_all              ai,              apps.ap_invoice_distributions_all aid,              apps.financials_system_params_all fsp          WHERE                  ai.org_id = fsp.org_id              AND ai.invoice_id = aid.invoice_id              AND ai.cancelled_date IS NOT NULL              AND aid.accounting_event_id IS NOT NULL              AND ai.invoice_amount = 0              AND nvl(ai.historical_flag, 'N') = 'N'              AND ai.validation_request_id IS NULL              AND 0 = (                  SELECT /*+ no_unnest */                      SUM(aid1.amount)                  FROM                      apps.ap_invoice_distributions_all aid1                  WHERE                      aid1.invoice_id = ai.invoice_id              )              AND NOT EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_invoice_distributions_all aid2                  WHERE                          aid2.invoice_id = ai.invoice_id                      AND aid2.parent_reversal_id IS NULL                      AND aid2.reversal_flag = 'Y'                      AND 1 <> (                          SELECT /*+ no_unnest */                              COUNT(1)                          FROM                              apps.ap_invoice_distributions_all aid3                          WHERE                              aid3.parent_reversal_id = aid2.invoice_distribution_id                      )              )              AND ( ( nvl(aid.match_status_flag, 'N') <> 'A'                      AND fsp.purch_encumbrance_flag = 'Y' )                    OR ( nvl(aid.match_status_flag, 'N') NOT IN ( 'A', 'T' )                         AND fsp.purch_encumbrance_flag = 'N' ) )              AND ai.invoice_id = invs.invoice_id              AND ROWNUM < 11          UNION ALL          SELECT /*+ ordered use_nl(ai, ail, aid) */              ai.invoice_id          FROM              invs,              apps.ap_invoices_all              ai,              apps.financials_system_params_all fsp,              apps.ap_invoice_lines_all         ail,              apps.ap_invoice_distributions_all aid          WHERE                  ai.invoice_id = invs.invoice_id              AND ail.invoice_id = ai.invoice_id              AND aid.invoice_id = ail.invoice_id              AND ai.org_id = fsp.org_id              AND ( nvl(ail.cancelled_flag, 'N') = 'Y'                    OR nvl(ail.discarded_flag, 'N') = 'Y' )              AND ai.cancelled_date IS NOT NULL              AND aid.line_type_lookup_code = 'AWT'              AND aid.parent_reversal_id IS NOT NULL              AND aid.awt_invoice_payment_id IS NULL              AND aid.reversal_flag = 'Y'              AND aid.accounting_event_id IS NULL              AND nvl(aid.match_status_flag, 'N') = 'N'              AND EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.xla_transaction_entities_upg xte,                      apps.xla_events                   xe                  WHERE                          xte.entity_id = xe.entity_id                      AND xte.ledger_id = aid.set_of_books_id                      AND nvl(xte.source_id_int_1, - 99) = aid.invoice_id                      AND xte.entity_code = 'AP_INVOICES'                      AND xte.application_id = 200                      AND xe.event_type_code LIKE '%CANCELLED'                      AND xe.budgetary_control_flag = 'N'              )              AND NOT EXISTS (                  SELECT                      1                  FROM                      apps.ap_holds_all aha                  WHERE                          aha.invoice_id = ai.invoice_id                      AND aha.release_lookup_code IS NULL              )              AND fsp.purch_encumbrance_flag = 'N'              AND ROWNUM < 11  /*SPLIT_HERE*/      )  ORDER BY      invoice_id) s]]>
        </SQLQuery>
        <IsInclude>1</IsInclude>
            <InUse>1</InUse>
            <DBQueryFieldList>
                <DBPatternSeqField>entrytime</DBPatternSeqField>
                <DBPatternField>
                    <DBQueryColName>sensor</DBQueryColName>
                    <FieldName>udfs1</FieldName>
                </DBPatternField>
                <DBPatternField>
                    <DBQueryColName>entrytime</DBQueryColName>
                    <FieldName>time</FieldName>
                </DBPatternField>
                <DBPatternField>
                                        <DBQueryColName>key_data</DBQueryColName>
                                        <FieldName>probkey</FieldName>
                                   </DBPatternField>
            </DBQueryFieldList>
            <IsSystem>0</IsSystem>
            <IsEnabled>1</IsEnabled>
            </DBPattern>
    </Patterns>
        <TagConditions>
            <TagCondition operator="CONTAINS_REGEX" field="udfs1" alertRuleVisible="0">
                <ConditionValues>
                    <ConditionValue>%</ConditionValue>
                </ConditionValues>
                <ConditionTags tagField="mtag">
                    <ConditionTag>#medium_severity_sensor</ConditionTag>
                </ConditionTags>
                <IsSystem>0</IsSystem>
                <IsEnabled>1</IsEnabled>
            </TagCondition>
        </TagConditions>
        <IsHidden>0</IsHidden>
        <IsSMAEnabled>0</IsSMAEnabled>
    </Source>
    <FieldNameMaps>
        <FieldNameMap>
            <Name>udfs1</Name>
            <DisplayName>sensor</DisplayName>
        </FieldNameMap>
        
    </FieldNameMaps>
</LoganContent>