<?xml version="1.0" encoding="UTF-8"?>
<LoganContent oms_version="2.50.2.0.0" name="content_ocid1.tenancy.oc1..aaaaaaaa5s2vdjjrydixjulorcwozffbpna37w5a35p3jhgpyshlkmio6oiq_1650039506307" content_version="2.50.2.0.0" xmlns="http://www.oracle.com/DataCenter/LogAnalyticsStd">
    <Field oms_version="2.50.2.0.0">
        <DisplayName>sensor</DisplayName>
        <FieldType>1</FieldType>
        <IsSystem>0</IsSystem>
        <IsPrimary>1</IsPrimary>
        <DataType>STRING</DataType>
        <IsMetricKeyEligible>0</IsMetricKeyEligible>
        <IsMetricValueEligible>0</IsMetricValueEligible>
        <FacetEligible>1</FacetEligible>
        <RangeFacetEligible>0</RangeFacetEligible>
        <TableEligible>1</TableEligible>
        <FacetPriority>1</FacetPriority>
        <Summarizable>1</Summarizable>
        <HighCardinality>1</HighCardinality>
        <LargeData>0</LargeData>
        <MultiValued>0</MultiValued>
        <SMAEnabledSetting>0</SMAEnabledSetting>
    </Field>
    
    <Tag>
<Name>#medium_severity_sensor</Name>
<DisplayName>Medium Severity Sensor</DisplayName>
<IsSystem>0</IsSystem>
<ProblemPriority>MEDIUM</ProblemPriority>
</Tag>
    <Source name="EBS Sensor: FIN AP Invoice prepayment related issue - Weekly" oms_version="2.50.2.0.0" configWarningSettings="0">
    <SourceType>database_sql</SourceType>
    <TargetTypes>
        <TargetType>omc_oracle_db_instance</TargetType>
        <TargetType>omc_oracle_pdb</TargetType>
    </TargetTypes>
    <DisplayName>EBS Sensor: FIN AP Invoice prepayment related issue - Weekly</DisplayName>
    <Description><![CDATA[Checking for various invoice prepayment related issues.]]></Description>
    <IsSystem>0</IsSystem>
    <IsSecureContent>1</IsSecureContent>
    <Patterns>
        <DBPattern dateTimeField="entrytime" dateTimeColumns="entrytime">
        <SQLQuery>
            <![CDATA[select 'ME$EBS_FIN_AP_INVOICE_1489862_4' sensor, to_timestamp(to_char(sysdate, 'YYYY-MM-DD hh24:mi:ss'), 'YYYY-MM-DD hh24:mi:ss') entrytime, 'invoice_id:' || s.invoice_id key_data FROM (SELECT      invoice_id invoice_id  FROM      (          WITH invs AS (              SELECT /*+ materialize */ DISTINCT                  invoice_id              FROM                  apps.ap_invoice_distributions_all              WHERE                  accounting_date BETWEEN ( trunc(sysdate) - 7 ) AND ( trunc(sysdate) + 3 )          )          SELECT /*+ ordered use_nl(ai_std, ail_std, aid_std) */              aid_std.invoice_id          FROM              invs,              apps.ap_invoices_all              ai_std,              apps.ap_invoice_lines_all         ail_std,              apps.ap_invoice_distributions_all aid_std,              apps.ap_invoices_all              ai_prepay          WHERE                  ai_std.invoice_id = ail_std.invoice_id              AND ail_std.invoice_id = aid_std.invoice_id              AND ail_std.line_number = aid_std.invoice_line_number              AND ail_std.prepay_invoice_id IS NOT NULL              AND ail_std.line_type_lookup_code = 'PREPAY'              AND ail_std.prepay_invoice_id = ai_prepay.invoice_id              AND aid_std.posted_flag = 'N'              AND ( ai_prepay.invoice_currency_code <> ai_std.invoice_currency_code                    OR ai_prepay.org_id <> ai_std.org_id )              AND ai_std.invoice_id = invs.invoice_id          UNION ALL          SELECT /*+ ordered use_nl(aid_app, aid_unap) */              aid_app.invoice_id          FROM              invs,              apps.ap_invoice_distributions_all aid_app,              apps.ap_invoice_distributions_all aid_unap          WHERE                  aid_app.invoice_id = aid_unap.invoice_id              AND nvl(aid_app.posted_flag, 'N') <> 'Y'              AND nvl(aid_unap.posted_flag, 'N') <> 'Y'              AND aid_app.reversal_flag = 'Y'              AND aid_unap.reversal_flag = 'Y'              AND aid_app.prepay_distribution_id IS NOT NULL              AND aid_unap.prepay_distribution_id IS NOT NULL              AND aid_unap.parent_reversal_id IS NOT NULL              AND aid_unap.parent_reversal_id = aid_app.invoice_distribution_id              AND aid_unap.accounting_event_id < aid_app.accounting_event_id              AND aid_app.invoice_id = invs.invoice_id          UNION ALL          SELECT /*+ ordered use_nl(ai, ail) */              ai.invoice_id          FROM              invs,              apps.ap_invoices_all      ai,              apps.ap_invoice_lines_all ail          WHERE                  ai.invoice_id = invs.invoice_id              AND ai.invoice_id = ail.invoice_id              AND ai.org_id = ail.org_id              AND ai.cancelled_date IS NULL              AND ai.cancelled_by IS NULL              AND ai.historical_flag IS NULL              AND ai.invoice_type_lookup_code IN ( 'PREPAYMENT' )              AND ail.line_type_lookup_code NOT IN ( 'TAX', 'AWT' )              AND ail.tax_already_calculated_flag IS NULL              AND NOT EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.zx_lines_det_factors                  WHERE                          application_id = 200                      AND entity_code = 'AP_INVOICES'                      AND trx_id = ail.invoice_id                      AND trx_line_id = line_number              )              AND EXISTS (                  SELECT /*+ no_unnest */                      1                  FROM                      apps.ap_invoice_distributions_all aid                  WHERE                          ail.invoice_id = aid.invoice_id                      AND ail.line_number = aid.invoice_line_number                      AND ail.org_id = aid.org_id                      AND aid.match_status_flag = 'A'              )      )  WHERE      ROWNUM < 11  ORDER BY      invoice_id) s]]>
        </SQLQuery>
        <IsInclude>1</IsInclude>
            <InUse>1</InUse>
            <DBQueryFieldList>
                <DBPatternSeqField>entrytime</DBPatternSeqField>
                <DBPatternField>
                    <DBQueryColName>sensor</DBQueryColName>
                    <FieldName>udfs1</FieldName>
                </DBPatternField>
                <DBPatternField>
                    <DBQueryColName>entrytime</DBQueryColName>
                    <FieldName>time</FieldName>
                </DBPatternField>
                <DBPatternField>
                                        <DBQueryColName>key_data</DBQueryColName>
                                        <FieldName>probkey</FieldName>
                                   </DBPatternField>
            </DBQueryFieldList>
            <IsSystem>0</IsSystem>
            <IsEnabled>1</IsEnabled>
            </DBPattern>
    </Patterns>
        <TagConditions>
            <TagCondition operator="CONTAINS_REGEX" field="udfs1" alertRuleVisible="0">
                <ConditionValues>
                    <ConditionValue>%</ConditionValue>
                </ConditionValues>
                <ConditionTags tagField="mtag">
                    <ConditionTag>#medium_severity_sensor</ConditionTag>
                </ConditionTags>
                <IsSystem>0</IsSystem>
                <IsEnabled>1</IsEnabled>
            </TagCondition>
        </TagConditions>
        <IsHidden>0</IsHidden>
        <IsSMAEnabled>0</IsSMAEnabled>
    </Source>
    <FieldNameMaps>
        <FieldNameMap>
            <Name>udfs1</Name>
            <DisplayName>sensor</DisplayName>
        </FieldNameMap>
        
    </FieldNameMaps>
</LoganContent>