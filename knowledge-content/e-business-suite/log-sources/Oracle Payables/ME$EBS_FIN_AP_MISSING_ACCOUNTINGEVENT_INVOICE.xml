<?xml version="1.0" encoding="UTF-8"?>
<LoganContent oms_version="2.50.2.0.0" name="content_ocid1.tenancy.oc1..aaaaaaaa5s2vdjjrydixjulorcwozffbpna37w5a35p3jhgpyshlkmio6oiq_1650039506307" content_version="2.50.2.0.0" xmlns="http://www.oracle.com/DataCenter/LogAnalyticsStd">
    <Field oms_version="2.50.2.0.0">
        <DisplayName>sensor</DisplayName>
        <FieldType>1</FieldType>
        <IsSystem>0</IsSystem>
        <IsPrimary>1</IsPrimary>
        <DataType>STRING</DataType>
        <IsMetricKeyEligible>0</IsMetricKeyEligible>
        <IsMetricValueEligible>0</IsMetricValueEligible>
        <FacetEligible>1</FacetEligible>
        <RangeFacetEligible>0</RangeFacetEligible>
        <TableEligible>1</TableEligible>
        <FacetPriority>1</FacetPriority>
        <Summarizable>1</Summarizable>
        <HighCardinality>1</HighCardinality>
        <LargeData>0</LargeData>
        <MultiValued>0</MultiValued>
        <SMAEnabledSetting>0</SMAEnabledSetting>
    </Field>
    
    <Tag>
<Name>#medium_severity_sensor</Name>
<DisplayName>Medium Severity Sensor</DisplayName>
<IsSystem>0</IsSystem>
<ProblemPriority>MEDIUM</ProblemPriority>
</Tag>
    <Source name="EBS Sensor: FIN AP Approved Invoice Distributions Missing ACCOUNTING EVENT ID - Weekly" oms_version="2.50.2.0.0" configWarningSettings="0">
    <SourceType>database_sql</SourceType>
    <TargetTypes>
        <TargetType>omc_oracle_db_instance</TargetType>
        <TargetType>omc_oracle_pdb</TargetType>
    </TargetTypes>
    <DisplayName>EBS Sensor: FIN AP Approved Invoice Distributions Missing ACCOUNTING EVENT ID - Weekly</DisplayName>
    <Description><![CDATA[Approved invoice distributions are missing accounting_event_id's.]]></Description>
    <IsSystem>0</IsSystem>
    <IsSecureContent>1</IsSecureContent>
    <Patterns>
        <DBPattern dateTimeField="entrytime" dateTimeColumns="entrytime">
        <SQLQuery>
            <![CDATA[select 'ME$EBS_FIN_AP_MISSING_ACCOUNTINGEVENT_INVOICE' sensor, to_timestamp(to_char(sysdate, 'YYYY-MM-DD hh24:mi:ss'), 'YYYY-MM-DD hh24:mi:ss') entrytime, 'invoice_id:' || s.invoice_id key_data FROM (SELECT      invoice_id invoice_id  FROM      (          WITH invs AS (              SELECT /*+ materialize */ DISTINCT                  invoice_id              FROM                  apps.ap_invoice_distributions_all              WHERE                  accounting_date BETWEEN ( trunc(sysdate) - 7 ) AND ( trunc(sysdate) + 3 )          )          SELECT              ai.invoice_id,              ai.org_id          FROM              invs,              apps.ap_invoices_all              ai,              apps.ap_suppliers                 asu,              apps.ap_supplier_sites_all        assi,              apps.ap_invoice_distributions_all aid,              apps.financials_system_params_all fsp          WHERE                  ai.invoice_id = invs.invoice_id              AND aid.invoice_id = ai.invoice_id              AND ai.vendor_id = asu.vendor_id (+)              AND ai.vendor_site_id = assi.vendor_site_id (+)          /*   AND nvl(ai.historical_flag,   'N') <> 'Y' */              AND fsp.org_id = aid.org_id              AND ( ( fsp.purch_encumbrance_flag = 'Y'                      AND aid.match_status_flag = 'A' )                    OR ( fsp.purch_encumbrance_flag = 'N'                         AND aid.match_status_flag IN ( 'A', 'T' ) ) )              AND nvl(aid.posted_flag, 'N') <> 'Y'              AND aid.accounting_event_id IS NULL          /* bug 18484204 */         and rownum < 10000               AND NOT EXISTS (                  SELECT                      1                  FROM                      apps.ap_holds_all  ah,                      apps.ap_hold_codes ahc                  WHERE                          ah.invoice_id = ai.invoice_id                      AND ah.hold_lookup_code = ahc.hold_lookup_code                      AND ah.release_lookup_code IS NULL                      AND nvl(ahc.postable_flag, 'N') = 'N'              )              AND aid.awt_invoice_payment_id IS NULL              and rownum < 10000           UNION          SELECT              ai.invoice_id,              ai.org_id          FROM              invs,              apps.ap_invoices_all               ai,              apps.ap_suppliers                  asu,              apps.ap_supplier_sites_all         assi,              apps.ap_self_assessed_tax_dist_all asad,              apps.financials_system_params_all  fsp          WHERE                  ai.invoice_id = invs.invoice_id              AND asad.invoice_id = ai.invoice_id              AND ai.vendor_id = asu.vendor_id (+)              AND ai.vendor_site_id = assi.vendor_site_id (+)          /*   AND nvl(ai.historical_flag,   'N') <> 'Y' */              AND fsp.org_id = asad.org_id              AND ( ( fsp.purch_encumbrance_flag = 'Y'                      AND asad.match_status_flag = 'A' )                    OR ( fsp.purch_encumbrance_flag = 'N'                         AND asad.match_status_flag IN ( 'A', 'T' ) ) )              AND nvl(asad.posted_flag, 'N') <> 'Y'              AND asad.accounting_event_id IS NULL          /* bug 21916712 */              AND asad.prepay_distribution_id IS NULL          /* bug 18484204 */         and rownum < 10000               AND NOT EXISTS (                  SELECT                      1                  FROM                      apps.ap_holds_all  ah,                      apps.ap_hold_codes ahc                  WHERE                          ah.invoice_id = ai.invoice_id                      AND ah.hold_lookup_code = ahc.hold_lookup_code                      AND ah.release_lookup_code IS NULL                      AND nvl(ahc.postable_flag, 'N') = 'N'              )              AND asad.awt_invoice_payment_id IS NULL      )  ORDER BY      invoice_id) s]]>
        </SQLQuery>
        <IsInclude>1</IsInclude>
            <InUse>1</InUse>
            <DBQueryFieldList>
                <DBPatternSeqField>entrytime</DBPatternSeqField>
                <DBPatternField>
                    <DBQueryColName>sensor</DBQueryColName>
                    <FieldName>udfs1</FieldName>
                </DBPatternField>
                <DBPatternField>
                    <DBQueryColName>entrytime</DBQueryColName>
                    <FieldName>time</FieldName>
                </DBPatternField>
                <DBPatternField>
                                        <DBQueryColName>key_data</DBQueryColName>
                                        <FieldName>probkey</FieldName>
                                   </DBPatternField>
            </DBQueryFieldList>
            <IsSystem>0</IsSystem>
            <IsEnabled>1</IsEnabled>
            </DBPattern>
    </Patterns>
        <TagConditions>
            <TagCondition operator="CONTAINS_REGEX" field="udfs1" alertRuleVisible="0">
                <ConditionValues>
                    <ConditionValue>%</ConditionValue>
                </ConditionValues>
                <ConditionTags tagField="mtag">
                    <ConditionTag>#medium_severity_sensor</ConditionTag>
                </ConditionTags>
                <IsSystem>0</IsSystem>
                <IsEnabled>1</IsEnabled>
            </TagCondition>
        </TagConditions>
        <IsHidden>0</IsHidden>
        <IsSMAEnabled>0</IsSMAEnabled>
    </Source>
    <FieldNameMaps>
        <FieldNameMap>
            <Name>udfs1</Name>
            <DisplayName>sensor</DisplayName>
        </FieldNameMap>
        
    </FieldNameMaps>
</LoganContent>