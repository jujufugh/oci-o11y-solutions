<?xml version="1.0" encoding="UTF-8"?>
<LoganContent oms_version="2.50.2.0.0" name="content_ocid1.tenancy.oc1..aaaaaaaa5s2vdjjrydixjulorcwozffbpna37w5a35p3jhgpyshlkmio6oiq_1650039506307" content_version="2.50.2.0.0" xmlns="http://www.oracle.com/DataCenter/LogAnalyticsStd">
    <Field oms_version="2.50.2.0.0">
        <DisplayName>sensor</DisplayName>
        <FieldType>1</FieldType>
        <IsSystem>0</IsSystem>
        <IsPrimary>1</IsPrimary>
        <DataType>STRING</DataType>
        <IsMetricKeyEligible>0</IsMetricKeyEligible>
        <IsMetricValueEligible>0</IsMetricValueEligible>
        <FacetEligible>1</FacetEligible>
        <RangeFacetEligible>0</RangeFacetEligible>
        <TableEligible>1</TableEligible>
        <FacetPriority>1</FacetPriority>
        <Summarizable>1</Summarizable>
        <HighCardinality>1</HighCardinality>
        <LargeData>0</LargeData>
        <MultiValued>0</MultiValued>
        <SMAEnabledSetting>0</SMAEnabledSetting>
    </Field>
    
    <Tag>
<Name>#medium_severity_sensor</Name>
<DisplayName>Medium Severity Sensor</DisplayName>
<IsSystem>0</IsSystem>
<ProblemPriority>MEDIUM</ProblemPriority>
</Tag>
    <Source name="EBS Sensor: MFG PO Requisition with invalid encumbrance amount - Weekly" oms_version="2.50.2.0.0" configWarningSettings="0">
    <SourceType>database_sql</SourceType>
    <TargetTypes>
        <TargetType>omc_oracle_db_instance</TargetType>
        <TargetType>omc_oracle_pdb</TargetType>
    </TargetTypes>
    <DisplayName>EBS Sensor: MFG PO Requisition with invalid encumbrance amount - Weekly</DisplayName>
    <Description><![CDATA[There exist requisition with invalid encumbrance amount]]></Description>
    <IsSystem>0</IsSystem>
    <IsSecureContent>1</IsSecureContent>
    <Patterns>
        <DBPattern dateTimeField="entrytime" dateTimeColumns="entrytime">
        <SQLQuery>
            <![CDATA[select 'ME$EBS_MFG_PO_PRC_PF_INVALID_REQ_ENCUMBRANCE' sensor, to_timestamp(to_char(sysdate, 'YYYY-MM-DD hh24:mi:ss'), 'YYYY-MM-DD hh24:mi:ss') entrytime, 'org_id:' || s.org_id || ', document_type:' || s.document_type || ', document_number:' || s.document_number || ', requisition_header_id:' || s.requisition_header_id key_data FROM (SELECT org_id org_id,  doc_type document_type,  doc_number document_number,  req_head_id requisition_header_id  FROM  (  SELECT 'OPEN_AMT' dist_category,  prh.org_id org_id,  prh.segment1 doc_number,  'REQ' doc_type,  prh.requisition_header_id req_head_id,  ROW_NUMBER() OVER (ORDER BY prh.requisition_header_id desc) rno  FROM apps.po_requisition_lines_all prl,  apps.po_req_distributions_all prd,  apps.po_requisition_headers_all prh,  apps.gl_ledgers g,  apps.fnd_currencies c,  apps.financials_system_params_all fsp,  apps.hr_operating_units hr  WHERE prl.requisition_line_id = prd.requisition_line_id  AND prl.requisition_header_id = prh.requisition_header_id  AND prd.set_of_books_id = g.ledger_id  AND g.currency_code = c.currency_code  AND fsp.org_id = hr.organization_id  AND fsp.org_id = prh.org_id  AND NVL(fsp.req_encumbrance_flag,'N') = 'Y'  AND NVL(prl.matching_basis,'ZZZ') = 'AMOUNT'  AND NVL(prl.Cancel_Flag,'N') = 'N'  AND NVL(prl.Closed_Code,'OPEN') <> 'FINALLY CLOSED'  AND NVL(prd.Prevent_Encumbrance_Flag,'N') = 'N'  AND prd.budget_account_id IS NOT NULL  AND NVL(prh.authorization_status,'INCOMPLETE') = 'APPROVED'  AND prl.line_location_id IS NULL  AND prl.modified_by_agent_flag IS NULL  AND ROUND(NVL(prd.encumbered_amount,0), c.precision) <> ROUND(NVL(prd.req_line_amount,0)+NVL(prd.NONRECOVERABLE_TAX,0),c.precision)  UNION  SELECT 'OPEN_QTY' dist_category,  prh.org_id org_id,  prh.segment1 doc_number,  'REQ' doc_type,  prh.requisition_header_id req_head_id,  ROW_NUMBER() OVER (ORDER BY prh.requisition_header_id desc) rno  FROM apps.po_requisition_lines_all prl,  apps.po_req_distributions_all prd,  apps.po_requisition_headers_all prh,  apps.gl_ledgers g,  apps.fnd_currencies c,  apps.financials_system_params_all fsp,  apps.hr_operating_units hr  WHERE prl.requisition_line_id = prd.requisition_line_id  AND prl.requisition_header_id = prh.requisition_header_id  AND prd.set_of_books_id = g.ledger_id  AND g.currency_code = c.currency_code  AND fsp.org_id = hr.organization_id  AND fsp.org_id = prh.org_id  AND NVL(fsp.req_encumbrance_flag,'N') = 'Y'  AND NVL(prl.matching_basis,'YYY') = 'QUANTITY'  AND NVL(prl.Cancel_Flag,'N') = 'N'  AND NVL(prl.Closed_Code,'OPEN') <> 'FINALLY CLOSED'  AND NVL(prd.Prevent_Encumbrance_Flag,'N') = 'N'  AND prd.budget_account_id IS NOT NULL  AND NVL(prh.authorization_status,'INCOMPLETE') = 'APPROVED'  AND prl.line_location_id IS NULL  AND prl.modified_by_agent_flag IS NULL  AND ROUND(NVL(prd.encumbered_amount,0), c.precision) <> ROUND(prl.unit_price * prd.req_line_quantity + NVL(prd.NONRECOVERABLE_TAX,0),c.precision)  UNION  SELECT 'MODIFIED' dist_category,  prh.org_id org_id,  prh.segment1 doc_number,  'REQ' doc_type,  prh.requisition_header_id req_head_id,  ROW_NUMBER() OVER (ORDER BY prh.requisition_header_id desc) rno  FROM apps.po_requisition_lines_all prl,  apps.po_req_distributions_all prd,  apps.po_requisition_headers_all prh,  apps.gl_ledgers g,  apps.fnd_currencies c,  apps.financials_system_params_all fsp,  apps.hr_operating_units hr  WHERE prl.requisition_line_id = prd.requisition_line_id  AND prl.requisition_header_id = prh.requisition_header_id  AND prd.set_of_books_id = g.ledger_id  AND g.currency_code = c.currency_code  AND fsp.org_id = hr.organization_id  AND fsp.org_id = prh.org_id  AND NVL(fsp.req_encumbrance_flag,'N') = 'Y'  AND NVL(prl.Cancel_Flag,'N') = 'N'  AND NVL(prl.Closed_Code,'OPEN') <> 'FINALLY CLOSED'  AND NVL(prd.Prevent_Encumbrance_Flag,'N') = 'N'  AND prd.budget_account_id IS NOT NULL  AND NVL(prh.authorization_status,'INCOMPLETE') = 'APPROVED'  AND prl.line_location_id IS NULL  AND NVL(modified_by_agent_flag,'N') = 'Y'  AND NVL(prd.encumbered_amount,0) <> 0  UNION  SELECT 'AUTOCREATED' dist_category,  prh.org_id org_id,  prh.segment1 doc_number,  'REQ' doc_type,  prh.requisition_header_id req_head_id,  ROW_NUMBER() OVER (ORDER BY prh.requisition_header_id desc) rno  FROM apps.po_requisition_lines_all prl,  apps.po_req_distributions_all prd,  apps.po_requisition_headers_all prh,  apps.po_distributions_all pod,  apps.po_line_locations_all pll,  apps.gl_ledgers g,  apps.fnd_currencies c,  apps.financials_system_params_all fsp,  apps.hr_operating_units hr  WHERE prl.requisition_line_id = prd.requisition_line_id  AND prl.requisition_header_id = prh.requisition_header_id  AND prd.set_of_books_id = g.ledger_id  AND g.currency_code = c.currency_code  AND fsp.org_id = hr.organization_id  AND fsp.org_id = prh.org_id  AND NVL(fsp.req_encumbrance_flag,'N') = 'Y'  AND NVL(prl.Cancel_Flag,'N') = 'N'  AND NVL(prl.Closed_Code,'OPEN') <> 'FINALLY CLOSED'  AND NVL(prd.Prevent_Encumbrance_Flag,'N') = 'N'  AND prd.budget_account_id IS NOT NULL  AND NVL(prh.authorization_status,'INCOMPLETE') = 'APPROVED'  AND pod.req_distribution_id = prd.distribution_id  AND pod.line_location_id = pll.line_location_id  AND prl.line_location_id IS NOT NULL  AND Pll.Shipment_Type <> 'SCHEDULED'  AND ( NVL(Pod.Encumbered_Flag,'N') = 'Y'  OR NVL(Pll.Cancel_Flag,'N') = 'Y'  OR NVL(Pll.Closed_Code,'OPEN') = 'FINALLY CLOSED' )  AND NVL(prd.encumbered_amount,0) <> 0  UNION  SELECT 'REJECTED' dist_category,  prh.org_id org_id,  prh.segment1 doc_number,  'REQ' doc_type,  prh.requisition_header_id req_head_id,  ROW_NUMBER() OVER (ORDER BY prh.requisition_header_id desc) rno  FROM apps.po_requisition_lines_all prl,  apps.po_req_distributions_all prd,  apps.po_requisition_headers_all prh,  apps.gl_ledgers g,  apps.fnd_currencies c,  apps.financials_system_params_all fsp,  apps.hr_operating_units hr  WHERE prl.requisition_line_id = prd.requisition_line_id  AND prl.requisition_header_id = prh.requisition_header_id  AND prd.set_of_books_id = g.ledger_id  AND g.currency_code = c.currency_code  AND fsp.org_id = hr.organization_id  AND fsp.org_id = prh.org_id  AND NVL(fsp.req_encumbrance_flag,'N') = 'Y'  AND NVL(prl.Cancel_Flag,'N') = 'N'  AND NVL(prl.Closed_Code,'OPEN') <> 'FINALLY CLOSED'  AND NVL(prd.Prevent_Encumbrance_Flag,'N') = 'N'  AND prd.budget_account_id IS NOT NULL  AND NVL(prh.authorization_status,'INCOMPLETE') = 'REJECTED'  AND prl.line_location_id IS NULL  AND NVL(prd.encumbered_amount,0) <> 0  UNION  SELECT 'RETURNED' dist_category,  prh.org_id org_id,  prh.segment1 doc_number,  'REQ' doc_type,  prh.requisition_header_id req_head_id,  ROW_NUMBER() OVER (ORDER BY prh.requisition_header_id desc) rno  FROM apps.po_requisition_lines_all prl,  apps.po_req_distributions_all prd,  apps.po_requisition_headers_all prh,  apps.gl_ledgers g,  apps.fnd_currencies c,  apps.financials_system_params_all fsp,  apps.hr_operating_units hr  WHERE prl.requisition_line_id = prd.requisition_line_id  AND prl.requisition_header_id = prh.requisition_header_id  AND prd.set_of_books_id = g.ledger_id  AND g.currency_code = c.currency_code  AND fsp.org_id = hr.organization_id  AND fsp.org_id = prh.org_id  AND NVL(fsp.req_encumbrance_flag,'N') = 'Y'  AND NVL(prl.Cancel_Flag,'N') = 'N'  AND NVL(prl.Closed_Code,'OPEN') <> 'FINALLY CLOSED'  AND NVL(prd.Prevent_Encumbrance_Flag,'N') = 'N'  AND prd.budget_account_id IS NOT NULL  AND NVL(prh.authorization_status,'INCOMPLETE') = 'RETURNED'  AND prl.line_location_id IS NULL  AND NVL(prd.encumbered_amount,0) <> 0  UNION  SELECT 'CANCEL' dist_category,  prh.org_id org_id,  prh.segment1 doc_number,  'REQ' doc_type,  prh.requisition_header_id req_head_id,  ROW_NUMBER() OVER (ORDER BY prh.requisition_header_id desc) rno  FROM apps.po_requisition_lines_all prl,  apps.po_req_distributions_all prd,  apps.po_requisition_headers_all prh,  apps.gl_ledgers g,  apps.fnd_currencies c,  apps.financials_system_params_all fsp,  apps.hr_operating_units hr  WHERE prl.requisition_line_id = prd.requisition_line_id  AND prl.requisition_header_id = prh.requisition_header_id  AND prd.set_of_books_id = g.ledger_id  AND g.currency_code = c.currency_code  AND fsp.org_id = hr.organization_id  AND fsp.org_id = prh.org_id  AND NVL(fsp.req_encumbrance_flag,'N') = 'Y'  AND NVL(prl.Cancel_Flag,'N') = 'Y'  AND NVL(prl.Closed_Code,'OPEN') <> 'FINALLY CLOSED'  AND NVL(prd.Prevent_Encumbrance_Flag,'N') = 'N'  AND prd.budget_account_id IS NOT NULL  AND prl.Source_Type_Code = 'VENDOR'  AND NVL(prd.encumbered_amount,0) <> 0  UNION  SELECT 'FINAL_CLOSE' dist_category,  prh.org_id org_id,  prh.segment1 doc_number,  'REQ' doc_type,  prh.requisition_header_id req_head_id,  ROW_NUMBER() OVER (ORDER BY prh.requisition_header_id) rno  FROM apps.po_requisition_lines_all prl,  apps.po_req_distributions_all prd,  apps.po_requisition_headers_all prh,  apps.gl_ledgers g,  apps.fnd_currencies c,  apps.financials_system_params_all fsp,  apps.hr_operating_units hr  WHERE prl.requisition_line_id = prd.requisition_line_id  AND prl.requisition_header_id = prh.requisition_header_id  AND prd.set_of_books_id = g.ledger_id  AND g.currency_code = c.currency_code  AND fsp.org_id = hr.organization_id  AND fsp.org_id = prh.org_id  AND NVL(fsp.req_encumbrance_flag,'N') = 'Y'  AND NVL(prl.Closed_Code,'OPEN') = 'FINALLY CLOSED'  AND NVL(prd.Prevent_Encumbrance_Flag,'N') = 'N'  AND prd.budget_account_id IS NOT NULL  AND prl.Source_Type_Code = 'VENDOR'  AND NVL(prd.encumbered_amount,0) <> 0  UNION  SELECT 'INTERNAL_REQ_CANCEL' dist_category,  prh.org_id org_id,  prh.segment1 doc_number,  'REQ' doc_type,  prh.requisition_header_id req_head_id,  ROW_NUMBER() OVER (ORDER BY prh.requisition_header_id desc) rno  FROM apps.po_requisition_lines_all prl,  apps.po_req_distributions_all prd,  apps.po_requisition_headers_all prh,  apps.gl_ledgers g,  apps.fnd_currencies c,  apps.financials_system_params_all fsp,  apps.hr_operating_units hr  WHERE prl.requisition_line_id = prd.requisition_line_id  AND prl.requisition_header_id = prh.requisition_header_id  AND prd.set_of_books_id = g.ledger_id  AND g.currency_code = c.currency_code  AND fsp.org_id = hr.organization_id  AND fsp.org_id = prh.org_id  AND NVL(fsp.req_encumbrance_flag,'N') = 'Y'  AND NVL(prl.Cancel_Flag,'N') = 'Y'  AND NVL(prl.Closed_Code,'OPEN') <> 'FINALLY CLOSED'  AND NVL(prd.Prevent_Encumbrance_Flag,'N') = 'N'  AND prd.budget_account_id IS NOT NULL  AND prl.Source_Type_Code = 'INVENTORY'  AND ROUND(NVL(prd.encumbered_amount,0), c.precision) <> ROUND((NVL(prl.Quantity_Delivered,0) * prd.req_Line_Quantity / prl.Quantity) * (NVL(prl.Unit_Price,0) + NVL(prd.NonRecoverable_Tax,0)),c.precision)  order by req_head_id desc  )  where rno < 3  and rownum < 1000) s]]>
        </SQLQuery>
        <IsInclude>1</IsInclude>
            <InUse>1</InUse>
            <DBQueryFieldList>
                <DBPatternSeqField>entrytime</DBPatternSeqField>
                <DBPatternField>
                    <DBQueryColName>sensor</DBQueryColName>
                    <FieldName>udfs1</FieldName>
                </DBPatternField>
                <DBPatternField>
                    <DBQueryColName>entrytime</DBQueryColName>
                    <FieldName>time</FieldName>
                </DBPatternField>
                <DBPatternField>
                                        <DBQueryColName>key_data</DBQueryColName>
                                        <FieldName>probkey</FieldName>
                                   </DBPatternField>
            </DBQueryFieldList>
            <IsSystem>0</IsSystem>
            <IsEnabled>1</IsEnabled>
            </DBPattern>
    </Patterns>
        <TagConditions>
            <TagCondition operator="CONTAINS_REGEX" field="udfs1" alertRuleVisible="0">
                <ConditionValues>
                    <ConditionValue>%</ConditionValue>
                </ConditionValues>
                <ConditionTags tagField="mtag">
                    <ConditionTag>#medium_severity_sensor</ConditionTag>
                </ConditionTags>
                <IsSystem>0</IsSystem>
                <IsEnabled>1</IsEnabled>
            </TagCondition>
        </TagConditions>
        <IsHidden>0</IsHidden>
        <IsSMAEnabled>0</IsSMAEnabled>
    </Source>
    <FieldNameMaps>
        <FieldNameMap>
            <Name>udfs1</Name>
            <DisplayName>sensor</DisplayName>
        </FieldNameMap>
        
    </FieldNameMaps>
</LoganContent>